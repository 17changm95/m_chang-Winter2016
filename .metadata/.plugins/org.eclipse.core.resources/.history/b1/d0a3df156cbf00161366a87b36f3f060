/**
 * @author Michael Chang
 * @version 1.0
 * @since 11/4/16
 * @period 1°
 */

package fracCalc;
import java.util.*;

public class FracCalcCheckpoint3 {

    public static void main(String[] args) {
        Scanner console = new Scanner(System.in);
        String answer;
                
        do {
	        System.out.print("Type in your input: ");
	        answer = console.nextLine();
	        
	    	String[] parsedInput = parseOperand(answer);
	    	int[] num1 = toImproperFrac(parsedInput[0]);
	    	int[] num2 = toImproperFrac(parsedInput[2]);
	    	int[] difference = subtraction(num1, num2);
	    	System.out.println(Arrays.toString(difference));
	    	System.out.println(intArrayConvert(difference));
	        
	        System.out.println(produceAnswer(answer));
        } while (answer.equals("quit") == false);
    }
    
    public static String[] parseOperand(String input) {
        String[] fracExpr;
    	
    	if (input.contains(" ")) {
        	fracExpr = input.split(" ");
        	return fracExpr;
    	} else {
        	throw new IllegalArgumentException("Please enter spaces between operands and operators.");
        }
    }
    
	public static int[] toImproperFrac(String input){
		//converting mixed numbers to improper fractions and also
		int whole;
		int numer1;
		int denom;
		
		if (input.contains("_") && input.contains("/")) {
    		whole = Integer.parseInt(input.substring(0, input.indexOf("_")));
    		numer1 = Integer.parseInt(input.substring(input.indexOf("_") + 1, input.indexOf("/")));
    		denom = Integer.parseInt(input.substring(input.indexOf("/") + 1));
		} else if (input.contains("_") == false && input.contains("/") == false) {
			whole = 0;
			numer1 = Integer.parseInt(input);
			denom = 1;
		} else {
			whole = 0;
			numer1 = Integer.parseInt(input.substring(0, input.indexOf("/")));
    		denom = Integer.parseInt(input.substring(input.indexOf("/") + 1));
		}
		
		int numer2 = denom * whole + numer1;
		int[] answer = {numer2, denom};
		return answer;
	}
    
    public static int[] addition(int[] input1, int[] input2) {
        int[] answer = new int[2];
        
    	if (input2[1] == input1[1]) {
        	answer[0] = input1[0] + input2[0];
        	answer[1] = input1[1];
        	return answer;
        } else if (input2 != input1) {
        	int numer1 = input1[0] * input2[1];
        	int denom = input1[1] * input2[1];
        	int numer2 = input1[1] * input2[0];
        	answer[0] = numer1 + numer2;
        	answer[1] = denom;
        	return answer;
        } else {
        	throw new IllegalArgumentException("You forgot something, or mebbe datatype is wrong.");
        }
    }
    
    public static int[] subtraction(int[] input1, int[] input2) {
        int[] answer = new int[2];
        
    	if (input2[1] == input1[1]) {
        	answer[0] = input1[0] - input2[0];
        	answer[1] = input1[1];
        	return answer;
        } else if (input2 != input1) {
        	int numer1 = input1[0] * input2[1];
        	int denom = input1[1] * input2[1];
        	int numer2 = input1[1] * input2[0];
        	answer[0] = numer1 - numer2;
        	answer[1] = denom;
        	return answer;
        } else if (input1[1] == 0 || input2[1] == 0) {
        	throw new IllegalArgumentException("Undefined.");
        } else {
        	throw new IllegalArgumentException("You forgot something, or mebbe datatype is wrong.");
        }
    }
    
    public static int[] multiplication(int[] input1, int[] input2) {
        int[] answer = new int[2];
        
        if (input1[1] != 0 && input2[1] != 0) {
        	answer[0] = input1[0] * input2[0];
        	answer[1] = input1[1] * input2[1];
        	return answer;
        } else if (input1[1] == 0 || input2[1] == 0) {
        	throw new IllegalArgumentException("Undefined.");
        } else {
        	throw new IllegalArgumentException("You forgot something, or mebbe datatype is wrong.");
        }
    }
    
    public static int[] division(int[] input1, int[] input2) {
    	int[] answer = new int[2];
    	int numer2 = input2[0];
    	int denom2 = input2[1];
    	input2[0] = denom2;
    	input2[1] = numer2;
    	
    	if (input1[1] != 0 && input2[1] != 0) {
        	answer[0] = input1[0] * input2[0];
        	answer[1] = input1[1] * input2[1];
        	return answer;
        } else if (input1[1] == 0 || input2[1] == 0) {
        	throw new IllegalArgumentException("Undefined.");
        } else {
        	throw new IllegalArgumentException("You forgot something, or mebbe datatype is wrong.");
        }
    }
    
    public static String intArrayConvert(int[] input) {
    	String answer;
    	int whole = 0;
    	int numer = input[0];
    	int denom = input[1];
    	
    	if (numer > denom) {
    		whole = numer / denom;
    		numer = numer % denom;
    		
    		if (numer == 0) {
    			return answer = whole + "";
    		} else {
    			return answer = whole + "_" + numer + "/" + denom;
    		}
    	} else if (numer == denom) {
    		return answer = "1";
    	} else if (numer == 0) {
    		return answer = "0";
    	} else if (denom == 0) {
    		throw new IllegalArgumentException("Undefined");
    	} else {
    		return answer = numer + "/" + denom;
    	}
    }
    
    public static String produceAnswer(String input) {
    	String[] parsedInput = parseOperand(input);
    	int[] num1 = toImproperFrac(parsedInput[0]);
    	int[] num2 = toImproperFrac(parsedInput[2]);
    	int[] sum = new int[2];
    	int[] difference = new int[2];
    	int[] quotient = new int[2];
    	int[] product = new int[2];
    	
    	if (parsedInput[1].equals("+")) {
	    	sum = addition(num1, num2);
	    	return intArrayConvert(sum);
	    } else if (parsedInput[1].equals("-")) {
	    	difference = subtraction(num1, num2);
	    	return intArrayConvert(difference);
	    } else if ((parsedInput[1].equals("*"))) {
	    	product = multiplication(num1, num2);
	    	return intArrayConvert(product);
	    } else if (parsedInput[1].equals("/")) {
	    	quotient = division(num1, num2);
	    	return intArrayConvert(quotient);
	    } else if (input.contains("quit")) {
    		return "";
    	} else {
    		throw new IllegalArgumentException("Please enter proper values.");
    	}
    }
}
